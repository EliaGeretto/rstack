version: 2.1

jobs:
  test:
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
    environment:
      RUSTFLAGS: -D warnings
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get install -y libunwind-dev libdw-dev
      - restore_cache:
          key: registry
      - run: cargo generate-lockfile
      - save_cache:
          key: registry-{{ .BuildNum }}
          paths:
            - /usr/local/cargo/registry/index
      - restore_cache:
          key: deps-<< parameters.image >>-{{ checksum "Cargo.lock" }}
      - run: cargo test
      - run: cargo test --manifest-path rstack/Cargo.toml --no-default-features --features dw
      - run: cargo test --manifest-path unwind/Cargo.toml --all-features
      - run: cargo run --manifest-path unwind-systest/Cargo.toml --all-features
      - run: cargo run --manifest-path dw-systest/Cargo.toml --all-features
      - save_cache:
          key: deps-<< parameters.image >>-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - /usr/local/cargo/registry/cache
  cross:
    parameters:
      target:
        type: string
      arch:
        type: string
      packages:
        type: string
    docker:
      - image: rustlang/rust:nightly
    environment:
      RUSTFLAGS: -D warnings
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUNNER: qemu-aarch64 -L /usr/aarch64-linux-gnu
      PKG_CONFIG_PATH: /usr/lib/<< parameters.arch >>-linux-gnu/pkgconfig
      PKG_CONFIG_ALLOW_CROSS: 1
    steps:
      - checkout
      - run: dpkg --add-architecture << parameters.arch >>
      - run: apt-get update
      - run: apt-get install -y << parameters.packages >> libunwind-dev:<< parameters.arch >>
      - run: rustup target add << parameters.target >>
      - run: rustc --version > ~/rust-version
      - restore_cache:
          key: registry
      - run: cargo generate-lockfile
      - save_cache:
          key: registry-{{ .BuildNum }}
          paths:
            - /usr/local/cargo/registry/index
      - restore_cache:
          key: deps-{{ checksum "~/rust-version" }}-<< parameters.target >>-{{ checksum "Cargo.lock" }}
      - run: cargo test --manifest-path unwind/Cargo.toml --target << parameters.target >>
      - run: cargo run --manifest-path unwind-systest/Cargo.toml --target << parameters.target >>
      - save_cache:
          key: deps-{{ checksum "~/rust-version" }}-<< parameters.target >>-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - /usr/local/cargo/registry/cache

workflows:
  test:
    jobs:
      - test:
          name: stable
          image: rust:1.38.0
      - test:
          name: nightly
          image: rustlang/rust:nightly
      - cross:
          name: aarch64
          target: aarch64-unknown-linux-gnu
          arch: arm64
          packages: gcc-aarch64-linux-gnu qemu-user
      - cross:
          name: x86
          target: i686-unknown-linux-gnu
          arch: i386
          packages: gcc-multilib
